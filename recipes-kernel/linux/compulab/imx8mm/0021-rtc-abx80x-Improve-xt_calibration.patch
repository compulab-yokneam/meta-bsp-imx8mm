From f39dbbdd918ab9b63b0ebffc9ca675df741c07a9 Mon Sep 17 00:00:00 2001
From: Kirill Kapranov <kirill.kapranov@compulab.co.il>
Date: Thu, 5 Nov 2020 18:56:16 +0200
Subject: [PATCH 21/89] rtc:abx80x: Improve xt_calibration

Signed-off-by: Kirill Kapranov <kirill.kapranov@compulab.co.il>
---
 drivers/rtc/rtc-abx80x.c | 33 +++++++++++++++++----------------
 1 file changed, 17 insertions(+), 16 deletions(-)

diff --git a/drivers/rtc/rtc-abx80x.c b/drivers/rtc/rtc-abx80x.c
index a666b4044a19..51eedd3b6dc7 100644
--- a/drivers/rtc/rtc-abx80x.c
+++ b/drivers/rtc/rtc-abx80x.c
@@ -107,7 +107,6 @@ struct abx80x_cap {
 	u16 pn;
 	bool has_tc;
 	bool has_wdog;
-	bool has_atk; /* Has advanced timekeeping */
 };
 
 static struct abx80x_cap abx80x_caps[] = {
@@ -118,7 +117,7 @@ static struct abx80x_cap abx80x_caps[] = {
 	[AB1801] = {.pn = 0x1801},
 	[AB1803] = {.pn = 0x1803},
 	[AB1804] = {.pn = 0x1804, .has_tc = true, .has_wdog = true},
-	[AB1805] = {.pn = 0x1805, .has_tc = true, .has_wdog = true, .has_atk = true},
+	[AB1805] = {.pn = 0x1805, .has_tc = true, .has_wdog = true},
 	[RV1805] = {.pn = 0x1805, .has_tc = true, .has_wdog = true},
 	[ABX80X] = {.pn = 0}
 };
@@ -498,9 +497,9 @@ static ssize_t oscillator_show(struct device *dev,
 
 static DEVICE_ATTR_RW(oscillator);
 
-static int const xt_freq_std = 32768000;
+static int const xt_freq_nom = 32768000;
 
-static int xt_calibration_set(struct i2c_client *client,
+static int xt_frequency_set(struct i2c_client *client,
 				u32 xt_freq)
 {
 	int retval, flags;
@@ -509,7 +508,7 @@ static int xt_calibration_set(struct i2c_client *client,
 	long Adj;
 	u8 XTCAL, CMDX, OFFSETX;
 
-	Adj = (xt_freq_std - (int)xt_freq) * 16 / 1000;
+	Adj = (xt_freq_nom - (int)xt_freq) * 16 / 1000;
 	if (Adj < -320 ) {
 		dev_err(&client->dev, "The XT oscillator is too fast to be adjusted\n");
 		return -ERANGE;
@@ -576,7 +575,7 @@ static int xt_calibration_set(struct i2c_client *client,
 
 }
 
-static ssize_t xt_calibration_store(struct device *dev,
+static ssize_t xt_frequency_store(struct device *dev,
 				struct device_attribute *attr,
 				const char *buf, size_t count)
 {
@@ -590,14 +589,16 @@ static ssize_t xt_calibration_store(struct device *dev,
 	}
 
 	dev_info(dev,"xt osc drift is %li ppm\n", \
-			1000000l * ((long)xt_freq - xt_freq_std) / xt_freq_std);
+			1000000l * ((long)xt_freq - xt_freq_nom) / xt_freq_nom);
 
-	retval = xt_calibration_set(to_i2c_client(dev->parent), xt_freq);
+	retval = xt_frequency_set(to_i2c_client(dev->parent), xt_freq);
 	if(retval)
 		return retval;
 	return count;
 }
 
+static DEVICE_ATTR_WO(xt_frequency);
+
 static ssize_t xt_calibration_show(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
@@ -621,8 +622,7 @@ static ssize_t xt_calibration_show(struct device *dev,
 	return sprintf(buf, "\n");
 	return flags;
 }
-
-static DEVICE_ATTR_RW(xt_calibration);
+static DEVICE_ATTR_RO(xt_calibration);
 
 #define SQFS_COUNT (1 << ABX8XX_REG_SQW_MODE_BITS)
 static char const *const SQFS[SQFS_COUNT] = { "1_century", "32768_Hz", "8192_Hz", "4096_Hz",
@@ -725,6 +725,7 @@ static struct attribute *rtc_calib_attrs[] = {
 	&dev_attr_oscillator.attr,
 	&dev_attr_sqw.attr,
 	&dev_attr_xt_calibration.attr,
+	&dev_attr_xt_frequency.attr,
 	NULL,
 };
 
@@ -1038,12 +1039,12 @@ static int abx80x_probe(struct i2c_client *client,
 		abx80x_enable_trickle_charger(client, trickle_cfg);
 	}
 
-	if (np && abx80x_caps[part].has_atk) {
-		if (!of_property_read_u32(np,"xt-frequency", &xt_freq)) {
-			dev_info(&client->dev, "Calibrate XT %d mHz:\n",
-			xt_freq);
-			xt_calibration_set(client, xt_freq);
-		}
+	if (!of_property_read_u32(np,"xt-frequency", &xt_freq)) {
+		dev_info(&client->dev, "Calibrate XT %d mHz:\n",
+		xt_freq);
+		xt_frequency_set(client, xt_freq);
+	} else {
+		xt_frequency_set(client, xt_freq_nom);
 	}
 
 	if (!of_property_read_string(np, "sqw", &sqw_mode_name))
-- 
2.17.1

